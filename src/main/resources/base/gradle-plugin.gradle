def url         = 干.proj('git_url', 'the git url with no protocol, e.g.: github.com/mytakedotorg/mtdo')
def plugin_list = 干.proj('plugin_list', 'space-delimited list of plugin names').split()
def plugin_tags = 干.proj('plugin_tags', 'space-delimited list of tags for the gradle plugin portal').split()

apply plugin: 'java-gradle-plugin'
apply plugin: 'com.gradle.plugin-publish'
tasks.eclipse.dependsOn(pluginUnderTestMetadata)

gradlePlugin {
	plugins {
		for (plugin in plugin_list) {
			register plugin, {
				id                  = 干.proj("plugin_${plugin}_id", "for ${plugin}: apply plugin: 'id'")
				implementationClass = 干.proj("plugin_${plugin}_impl", "for ${plugin}: implementationClass")
				displayName         = 干.proj("plugin_${plugin}_name", "for ${plugin}: name for the plugin portal")
				description         = 干.proj("plugin_${plugin}_desc", "for ${plugin}: description for the plugin portal")
			}
		}
	}
}

pluginBundle {
	website = "https://${url}"
	vcsUrl = "https://${url}.git"
	tags = plugin_tags
	plugins {
		// set plugin-specific tags
		for (plugin in plugin_list) {
			def tagsOptional = findProperty("plugin_${plugin}_tags")
			if (tagsOptional instanceof String) {
				named plugin, {
					tags = tagsOptional.split()
				}
			}
		}
	}
}
